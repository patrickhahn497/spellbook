{"ast":null,"code":"var _jsxFileName = \"/Users/patrickhahn/Documents/GitHub/spellbook/src/App.js\";\nimport React, { Component } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport 'tachyons';\nimport SearchBox from './components/SearchBox';\nimport SpellPanel from './components/SpellPanel';\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.onSearchChange = event => {\n      this.setState({\n        searchfield: event.target.value\n      });\n      console.log(\"searchfield: \" + this.state.searchfield); // console.log(\"search url\" + this.state.searchUrl);\n    };\n\n    this.search = () => {\n      this.urlifySpell(this.state.searchfield);\n\n      if (this.state.searchUrl) {\n        fetch(this.state.searchUrl).then(response => response.json()).then(spell => this.setState({\n          result: spell\n        }));\n      }\n\n      console.log(this.urlifySpell(this.state.searchfield));\n    };\n\n    this.onSearchClick = event => {\n      this.search();\n    };\n\n    this.onEnter = event => {\n      if (event.which == 13 || event.keyCode == 13) {\n        event.preventDefault();\n        this.search();\n      }\n    };\n\n    this.state = {\n      searchfield: '',\n      result: {\n        name: \"\",\n        desc: \"\",\n        range: \"\",\n        level: null\n      },\n      searchUrl: \"\"\n    };\n  }\n\n  urlifySpell(text) {\n    const queries = text.split(\" \");\n    const linkUrl = 'http://www.dnd5eapi.co/api/spells/?name=' + queries.join(\"+\");\n    var spellUrl = '';\n    fetch(linkUrl).then(response => response.json()).then(result => {\n      if (result.count >= 1) {\n        this.setState({\n          searchUrl: result.results[0].url\n        });\n      } else {\n        window.alert(\"No result found\");\n      }\n    });\n    console.log(\"spellurl \" + spellUrl);\n    console.log(\"searchurl \" + this.state.searchurl);\n  }\n\n  render() {\n    const _this$state$result = this.state.result,\n          name = _this$state$result.name,\n          desc = _this$state$result.desc,\n          range = _this$state$result.range,\n          level = _this$state$result.level,\n          higher_level = _this$state$result.higher_level,\n          duration = _this$state$result.duration,\n          concentration = _this$state$result.concentration,\n          casting_time = _this$state$result.casting_time;\n    return React.createElement(\"div\", {\n      className: \"tc\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"tc title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"Spellbook\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \" Click twice if search results don't come in the first time. The oracle needs time to browse the spell library \"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, \" If the spell isn't here, it's because it's a Xanathar spell. The oracle does not have access to those\"), React.createElement(SearchBox, {\n      searchClick: this.onSearchClick,\n      searchfield: this.state.searchfield,\n      searchChange: this.onSearchChange,\n      onEnter: this.onEnter,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }), React.createElement(SpellPanel, {\n      name: name,\n      desc: desc,\n      range: range,\n      level: level,\n      higher_level: higher_level,\n      duration: duration,\n      concentration: concentration,\n      casting_time: casting_time,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/patrickhahn/Documents/GitHub/spellbook/src/App.js"],"names":["React","Component","SearchBox","SpellPanel","App","constructor","onSearchChange","event","setState","searchfield","target","value","console","log","state","search","urlifySpell","searchUrl","fetch","then","response","json","spell","result","onSearchClick","onEnter","which","keyCode","preventDefault","name","desc","range","level","text","queries","split","linkUrl","join","spellUrl","count","results","url","window","alert","searchurl","render","higher_level","duration","concentration","casting_time"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport 'tachyons';\nimport SearchBox from './components/SearchBox'\nimport SpellPanel from './components/SpellPanel'\n\nclass App extends Component {\n\n  constructor() {\n    super();\n    this.state = {\n      searchfield: '',\n      result: {name: \"\",\n                desc: \"\",\n                range: \"\",\n                level: null},\n      searchUrl : \"\"\n    }\n  }\n\n\n  onSearchChange = (event) => {\n    this.setState({searchfield: event.target.value});\n    console.log(\"searchfield: \" + this.state.searchfield);\n    // console.log(\"search url\" + this.state.searchUrl);\n  }\n\n\n  search = () => {\n    this.urlifySpell(this.state.searchfield);\n    if (this.state.searchUrl){\n      fetch(this.state.searchUrl)\n        .then(response=>response.json())\n        .then(spell => this.setState({result: spell}));\n    }\n    console.log(this.urlifySpell(this.state.searchfield));\n\n  }\n\n  onSearchClick = (event) => {\n    this.search();\n\n  }\n\n  onEnter = (event) => {\n    if (event.which==13 || event.keyCode==13){\n      event.preventDefault();\n      this.search();\n    }\n  }\n\n\n  urlifySpell(text) {\n    const queries = text.split(\" \");\n    const linkUrl = 'http://www.dnd5eapi.co/api/spells/?name=' + queries.join(\"+\");\n    var spellUrl = '';\n    fetch(linkUrl)\n      .then(response=>response.json())\n      .then(result=> {\n        if (result.count >=1){\n          this.setState({searchUrl: result.results[0].url});\n        } else {\n          window.alert(\"No result found\");\n        }\n    });\n\n    console.log(\"spellurl \" + spellUrl);\n    console.log(\"searchurl \" + this.state.searchurl);\n\n  }\n\n  render() {\n    const {name, desc, range, level, higher_level, duration, concentration, casting_time} = this.state.result;\n\n    return (\n      <div className=\"tc\">\n        <h1 className=\"tc title\">Spellbook</h1>\n        <p> Click twice if search results don't come in the first time. The oracle needs time to browse the spell library </p>\n        <p> If the spell isn't here, it's because it's a Xanathar spell. The oracle does not have access to those</p>\n        <SearchBox searchClick={this.onSearchClick} searchfield={this.state.searchfield} searchChange={this.onSearchChange} onEnter={this.onEnter}/>\n        <SpellPanel name={name} desc={desc} range={range} level={level} higher_level={higher_level} duration={duration} concentration={concentration}\n          casting_time={casting_time}/>\n      </div>\n      );\n\n  }\n\n\n\n\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}